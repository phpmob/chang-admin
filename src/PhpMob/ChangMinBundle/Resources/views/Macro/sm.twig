{% macro actions(object, route, method = 'PATCH', btn_css = '', form = true, property = 'state') %}
    {% set state = attribute(object, property) %}
    {% set transitions = sm_possibles(object) %}
    {% set color = sm_state_color(state) %}
    {% set btn_css = "btn btn-sm " ~ btn_css %}

    {% if transitions|length %}
        <div class="dropdown box-inline">
            <button type="button" data-toggle="dropdown" class="dropdown-toggle ts-dropdown {{ btn_css }}">
                <i class="fa fa-circle fa-color-{{ color }}"></i>
                {{ sm_state_label(state) }} <i class="dropdown-caret"></i>
            </button>
            <ul class="dropdown-menu">
                {% for ts in transitions %}
                    {% set routing = path(route, {"id": object.id, "transition": ts.name}) %}
                    <li class="ts-action ts-{{ ts.name }} ts-color-{{ ts.color }}">
                        {% if form %}
                            <form action="{{ routing }}" method="post">
                                <input type="hidden" name="_method" value="{{ method }}">
                                <button type="submit" data-ts-action class="btn btn-secondary" data-requires-confirmation>
                                    <i class="fa fa-circle fa-color-{{ ts.color }}"></i> {{ ts.label|trans|raw }}
                                </button>
                            </form>
                        {% else %}
                            <a href="{{ routing }}" data-method="{{ method }}" data-ts-action data-requires-confirmation>
                                <i class="fa fa-circle fa-color-{{ ts.color }}"></i> {{ ts.label|trans|raw }}
                            </a>
                        {% endif %}
                    </li>
                {% endfor %}
            </ul>
        </div>
    {% else %}
        <div class="btn-ts-state {{ btn_css }}">
            <i class="fa fa-circle fa-color-{{ color }}"></i> {{ sm_state_label(state) }}
        </div>
    {% endif %}
{% endmacro %}

{%- macro state_label(r, graph, field = null) -%}
    {% do sm_graph_set(graph) %}
    {% set state = attribute(r, field|default('state')) %}
    {% set color = sm_state_color(state) %}
    {% set label = sm_state_label(state) %}
    <span><i class="fa fa-circle fa-color-{{ color }}"></i> {{ label }}</span>
{%- endmacro -%}

